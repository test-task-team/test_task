-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Background: 
 - This is a paid test.  You’ll be doing work we hope will be included in the project.  However, the primary purpose of this test is to help assess your development skills and get a sense of how we work together.
 - Before doing anything, confirm payment details with the test.

Athena API Test (paid challenge / test):
1. Candidate must set up a repo I can push the existing code to
   a. (This demonstrates you know something about git)
   b. Key is at the bottom of instructions.
   c. We’ll push code up once you tell us details of your repo.  We prefer it to be private
2. After you get the code & set up the environment (see readme.md),  you should run setup.py test’ & see it complete with meaningful results
   a. (You have to have docker running; if you modify the readme.md file to make the relevant instructions better, bonus points.)
3. Create the code for the ‘user_by_ref’ end point in the swagger file (files\swagger\api.yml).
   a. Have your new function return hardcoded fake data that is inline with the swagger file
   b. Model the code you produce to be similar to the ‘About’ Function
   c. Write at least one test.
   d. Let me know when its done

   Public Key for git access:
ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAgEAt5J7oDX4I8Wa0kHFKggVnl2YgZxyKMkjCLRWwDp/84KJSSdlr/sq0+EFiSexMowVjw3LQrAKshwCji0v/q8j0BD3Gn10mSOR5ZV3k2pCyg3Ok685nhfUBHG67th/GppKxjG0GYLUk0uROl65oXVFO/tHUkqZa4sCR/dZYmANaZG4edql+Tt47II6Nx6dV0JVqM6SoTg0h9Lf67jprc9D7kUATQS+9Kj6gyalWPljdlhwgXXWTR+6UGuI4I+jm8osyT0p9ko8hXynjEXTxix8YnNHoQaBTVSHTLclmAOeTkG9lZJm5aekFm3KD5+jPA1Y3s77B0zCwV9s6mVTpvRF4bH8arwhLH7iILbT4h3XSB2M8miCeDcx8l++sQdcyqvc5vWvPk+66uuCYXn9EWhZSDuiJKX+kWMGlLobPLZbdLkhLzJBePpd5Bm4M/RFloTThfIAHOr9GaTfh+5qOG0UAealiraoNkUlT5ka7BvELF//ZmI5PROBhT/lasfCd5nl0y0RPmm3GRW9xRGM2+JNC0IuYaPlI5aIgQndZXC5S8QrnaetY8YIe3smPlYDnGqlLkb/D2+U3RfAbVJeQ0kUxAShlZ9ImL0rluKcb9Jve+qvGMb9gfBalgR16luORDDffyVkjvEzNyYE6329Ub1n5J2Z+ynOmyu1k9+CXM0K8ok= imported-openssh-key
- -----BEGIN PGP SIGNATURE-----

-----BEGIN PGP SIGNATURE-----

iQEzBAEBCAAdFiEE4oKVp9JdWKQFS03JBrj2XcxqDGEFAlyc6xUACgkQBrj2Xcxq
DGFNRggAvG+MY/x1e2tHrNHXoG2ZaHxaOU+yu7LC/uJjXcz8N71OJj6/dYh2p6J3
F0gTG+who+jBe/7TZ+mC0UjIaaovEY4UTalBmWBcrJpk0whjVdnBCEzr5IrZPjWv
tBCJ3WaLN969p/RURxnkVbLeWQGHLn9tc6gHpDqCis72QjR6XAy+dDDOPoarC70l
hmNfVCEsKeXjmltMSDKX10TAS+pYs8fdZRqGxsKptXLquVKALf4SfHhv8AUHfSKw
e1pQqv4FSenLZ5A2JTOJVKK6Nzj7FDOYYL0k4r2n8XDhJUST/z0IKDEvplmbrBzz
i0yQLOjh+hI3zgmwFkBq4FLk993QvQ==
=B5UW
-----END PGP SIGNATURE-----
